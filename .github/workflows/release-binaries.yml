
name: 'Release'

on:
  #push:
  #  branches:
  #    - 'main'
  #    - 'master'
  workflow_dispatch:

jobs:
  make_matrix:
    name: Make matrix
    runs-on: ubuntu-latest
    outputs:
      bin_targets: ${{ steps.generate_matrix.outputs.bin_targets }}
      do_artifact: ${{ steps.conf.outputs.do_artifact }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Check conditions
        id: conf
        run: |
          echo ::set-output name=do_artifact::1;
          if [ "$(jq .release.artifact -r ci-conf.json)" = false ] || [ "$(jq .release.artifact -r ci-conf.json)" = null ]; then echo 'skipping because no release artifact config'; echo ::set-output name=artifact::0; fi
          if [ "$(jq .release.artifact.targets -r ci-conf.json)" = false ]; then echo 'skipping because no targets'; echo ::set-output name=artifact::0; fi
          if [ "$(jq .release.artifact.bins -r ci-conf.json)" = false ]; then echo 'skipping because no binaries'; echo ::set-output name=artifact::0; fi
      - name: Generate matrix
        id: generate_matrix
        if: steps.conf.outputs.do_artifact == 1
        run: |
          mat="$(jq .release.artifact -r ci-conf.json | jq '.targets[] + (.bins[] | {"bin": .})' | jq -sc '{"include":.})"
          echo $mat
          echo ::set-output name=bin_targets::"$mat"

  binary:
    name: Release binaries
    needs: make_matrix
    runs-on: ${{ matrix.os }}
    if: needs.make_matrix.outputs.do_artifact == 1
    strategy:
      matrix: ${{ fromJson(needs.make_matrix.outputs.bin_targets) }}
    steps:
      - name: Log matrix
        run: |
          echo bin=${{ matrix.bin }}
          echo os=${{ matrix.os }}
          echo target=${{ matrix.target }}
          echo asset_postfix=${{ matrix.asset_postfix }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build project
        run: cargo build --bin ${{ matrix.bin }}--target ${{ matrix.target }} --release --locked
      - name: Upload binary to release
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/release/${{ matrix.bin }}
          asset_name: ${{ matrix.bin }}-${{ matrix.asset_postfix }}
